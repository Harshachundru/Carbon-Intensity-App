{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","useState","carbonIntensity","setCarbonIntensity","selected","setSelected","specificCarbonData","getCarbonData","a","fetch","response","json","data","useEffect","handleClickEvent","id","Fragment","className","href","scope","onClick","Object","keys","slice","map","key","value","from","to","intensity","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPA4HeA,MApHf,SAAaC,GAEX,IAFkB,EAI0BC,mBAAS,IAJnC,mBAIbC,EAJa,KAIIC,EAJJ,OAKYF,qBALZ,mBAKbG,EALa,KAKHC,EALG,KAOdC,EAAqBJ,EAAgBE,GAGnCG,EAAa,uCAAG,8BAAAC,EAAA,sEACGC,MATX,sDAQQ,cACdC,EADc,gBAEDA,EAASC,OAFR,OAEdC,EAFc,OAGpBT,EAAmBS,EAAKA,MAHJ,2CAAH,qDAMnBC,oBAAS,sBAAE,sBAAAL,EAAA,sDACTD,IADS,2CAET,CAACH,IAGH,IAAMU,EAAmB,SAACC,GACxBV,EAAYU,IASd,OACE,cAAC,IAAMC,SAAP,UACE,sBAAKC,UAAY,MAAjB,UACU,qBAAKA,UAAU,uCAAf,SACA,mBAAGA,UAAU,yBAAyBC,KAAK,IAA3C,mCAGA,sBAAKD,UAAU,sBAAf,UACI,oBAAIA,UAAU,YAAd,oDACA,mBAAGA,UAAU,OAAb,8GACJ,wBAAOA,UAAU,QAAjB,UACI,gCACI,6BACI,oBAAIE,MAAM,MAAV,kDAGR,kCACI,6BACI,oBAAIA,MAAM,MAAV,SAAgB,wBAAQC,QAAW,WACvDN,EAAiB,IAClBG,UAAU,kBAF2B,6BAIpB,6BACI,qBAAIE,MAAM,MAAV,cAAiB,wBAAQC,QAAW,WACxDN,EAAiB,IAClBG,UAAU,kBAF4B,8BAIrB,6BACI,oBAAIE,MAAM,MAAV,SAAgB,wBAAQC,QAAW,WACvDN,EAAiB,IAClBG,UAAU,kBAF2B,6BAIpB,6BACI,oBAAIE,MAAM,MAAV,SAAgB,wBAAQC,QAAW,WACvDN,EAAiB,IAClBG,UAAU,kBAF2B,6BAIpB,6BACI,oBAAIE,MAAM,MAAV,SAAgB,wBAAQC,QAAW,WACvDN,EAAiB,IAClBG,UAAU,kBAF2B,sCAOhC,8BAGHX,GAAsBe,OAAOC,KAAKhB,GAAoBiB,MAAM,EAAE,GAAGC,KAAI,SAACC,EAAKC,GAAN,OACpE,sBAAKX,GAAMU,EAAeC,MAAOA,EAAOT,UAAU,sBAAlD,UACA,oBAAIA,UAAU,wBAAd,sCACA,wBAAOA,UAAU,QAAjB,UACE,gCACE,+BACE,oBAAIA,UAAU,qBAAd,uBACA,oBAAIA,UAAU,qBAAd,qBACA,oBAAIA,UAAU,qBAAd,mCAGJ,gCACN,qBAAIF,GAAMU,EAAeC,MAAOA,EAAhC,UACG,oBAAKT,UAAU,0BAAf,SAA0CX,EAAmBqB,OAC7D,oBAAKV,UAAU,0BAAf,SAA0CX,EAAmBsB,KAC7D,oBAAKX,UAAU,0BAAf,SAA0CI,OAAOC,KAAKhB,EAAmBuB,WAAWL,KAAI,SAACC,EAAKC,GAAN,OACpF,oBAAcA,MAAOA,EAAOT,UAAW,SAAvC,SACI,qBAAIA,UAAU,mBAAd,UAAkCQ,EAAlC,MAA0CnB,EAAmBuB,UAAUJ,OADlEA,UAJIA,UAXKA,cC5EhBK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.08dc2269.chunk.js","sourcesContent":["\r\nimport React, { Component } from 'react';\r\nimport {useState, useEffect} from 'react';\r\nimport './App.css';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\n\r\nfunction App(props) {\r\n\r\n  const Base_url = `https://api.carbonintensity.org.uk/intensity/date/`;\r\n  \r\n  let [carbonIntensity, setCarbonIntensity] = useState([]);\r\n  let [selected, setSelected] = useState();\r\n\r\n  let specificCarbonData = carbonIntensity[selected];\r\n \r\n\r\n  const getCarbonData = async () => {\r\n    const response = await fetch(Base_url);\r\n    const data = await response.json();\r\n    setCarbonIntensity(data.data);\r\n  };\r\n \r\n  useEffect( async () => {\r\n    getCarbonData();\r\n  },[selected]);\r\n \r\n\r\n  const handleClickEvent = (id) => {\r\n    setSelected(id);\r\n    /*\r\n    console.log(selected);\r\n    console.log(specificCarbonData);\r\n    */\r\n   \r\n};\r\n\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <div className = \"App\">\r\n                <nav className=\"navbar navbar navbar-dark bg-primary\">\r\n                <a className=\"navbar-brand display-4\" href=\"#\">Trilateral Research</a>\r\n                </nav>\r\n               \r\n                <div className=\"container jumbotron\">\r\n                    <h3 className=\"display-4\">Technical Assigment : Carbon Intensity</h3>\r\n                    <p className=\"lead\">This is the simple react app designed to view the Carbon Intensity by fetching the data from API</p>\r\n                <table className=\"table\">\r\n                    <thead> \r\n                        <tr>\r\n                            <th scope=\"col\">DOUBLE CLICK TO SELECT THE DATES</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td scope=\"row\"><button onClick = {() => {\r\n        handleClickEvent(0); \r\n    }} className=\"btn btn-primary\">20 Feb 2021</button></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td scope=\"row\"> <button onClick = {() => {\r\n        handleClickEvent(1); \r\n    }} className=\"btn btn-primary\">19 Feb 2021</button></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td scope=\"row\"><button onClick = {() => {\r\n        handleClickEvent(2); \r\n    }} className=\"btn btn-primary\">18 Feb 2021</button></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td scope=\"row\"><button onClick = {() => {\r\n        handleClickEvent(3); \r\n    }} className=\"btn btn-primary\">17 Feb 2021</button></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td scope=\"row\"><button onClick = {() => {\r\n        handleClickEvent(4); \r\n    }} className=\"btn btn-primary\">16 Feb 2021</button></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                </div>\r\n            <div>\r\n              \r\n                \r\n        {specificCarbonData && Object.keys(specificCarbonData).slice(0,1).map((key, value) => (\r\n          <div id = {key} key={key} value={value} className=\"Container jumbotron\">\r\n          <h1 className=\"display-4 text-center\" >Carbon Intensity Details</h1>\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th className=\"text-center border\">From Date</th>\r\n                <th className=\"text-center border\">To Date</th>\r\n                <th className=\"text-center border\">Intensity Values</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n      <tr id = {key} key={key} value={value} >\r\n         <td  className=\"text-center lead border\">{specificCarbonData.from}</td>\r\n         <td  className=\"text-center lead border\">{specificCarbonData.to}</td>\r\n         <td  className=\"text-center lead border\">{Object.keys(specificCarbonData.intensity).map((key, value) => (\r\n             <ul key={key} value={value} className =\"border\">\r\n                 <li className=\"text-center lead\">{key}:  {specificCarbonData.intensity[key]}</li>\r\n             </ul>\r\n         ))}</td>\r\n      </tr>\r\n      </tbody>\r\n      </table>\r\n      \r\n      </div>\r\n\r\n         ))}\r\n           \r\n            </div>\r\n            \r\n            </div>\r\n   \r\n   \r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}